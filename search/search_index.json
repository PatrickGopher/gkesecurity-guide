{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"The Unofficial Google Kubernetes Engine (GKE) Security Guide Introduction Disclaimer This guide is not an official guide, is not endorsed by Google , and is comprised entirely from publicly available information. The information is provided \"as-is\", without warranty or fit for a particular purpose. You should fully understand the security implications of each recommendation before applying it in your environment. There are several books on the topic of getting Kubernetes Up and Running and even one specific to Kubernetes Security . If you are deploying in multiple platform environments like on-premise or across multiple cloud providers, those resources will be very useful. However, if you are deploying GKE clusters in GCP, you'll notice that there are a wide array of GCP and GKE-specific choices that need to be made. The goal of this guide is to help you prioritize and implement a security posture that meets your organization's needs while taking advantage of all the benefits of the GKE service. For each control and approach, the guide will attempt to help you understand the relative risks, relative likelihood, upfront cost and complexity, and ongoing cost and complexity of each security-related decision. Deep links to official GCP/GKE and Kubernetes documentation will be provided to guide further reading. Finally, links to hand-selected tools, books, and talk recordings will give additional support to the concepts for further exploration and understanding. Audience This guide is focused specifically on the following roles working with a GKE deployment: Operations - Those responsible for deploying and maintaining the GCP Project, Networking, and GKE Cluster lifecycle. Security - Those responsible for ensuring the operational environment adequately meets the organization's security standards and posture. Security-minded developers - Those deploying operational workloads into the GKE cluster looking to follow security best practices. Team Leads - Those managing teams implementing GKE clusters and responsible for prioritizing security with operational velocity. Structure of this Guide As each layer of a system builds upon the layer underneath, this guide begins with the foundation of all GCP services and explains how the structure of folders and projects in a GCP organization can help organize and guide security settings and permissions management. Next, it covers the types of network configurations that support GKE clusters for different isolation strategies. The core of the guide gets into cluster configuration, lifecycle and operations, observability, and the management of custom additions in the form of addons. With a solid base in place, the guide covers the deployment and configuration of workloads and container images in terms of security best practices. Finally, it covers certain security-related workflows such as auditing for conformance and handling security issues when an incident occurs. Each topic area will cover: A few sentences to paragraphs on what the topic or setting is and does. Why the topic or setting is important and the risks associated with it. The versions it applies to, where applicable. When you might want to prioritize adoption or implementation. The upfront cost and complexity of deploying the change or approach. The longer term cost and complexity of maintaining the system with this change or approach implemented. GKE vs Building Kubernetes Yourself For first time Kubernetes operators, it's a fantastic idea to follow Kubernetes the Hard Way by Kelsey Hightower and build a cluster from scratch. It will give you a deep understanding of the components, their configuration settings, and an appreciation for the complexity of the system. The very next thing you should do is leverage an approach to Kubernetes that ensures you and your team do as little of that work as possible. In many cases, this is best done by working with a managed Kubernetes service like GKE . Successful Kubernetes cluster deployments require solid execution in wide range of areas, and it's impossible to be execellent in all of them at once. From a business standpoint, you want your teams working on the problems that matter to your organization and to leave the boring operational work to the cloud service provider. Kubernetes version upgrades, security patches, operating system maintenance, logging and monitoring infrastructure, and more are all things you want to be building \"on top of\" and not having to \"build\" yourself first. Refer to the benefits of GKE for further reading. Contributing This guide is a living document, and contributions in the form of issues and PRs are welcomed. If you are considering writing new content, please open an issue outlining what you'd like to write about, where it might fit in, and other details. If you found this guide useful, please consider donating your time attending and supporting your local cloud-native and Kubernetes-related meetups. The success or failure of Kubernetes and the CNCF ecosystem is largely dependent on you and how you help elevate others with your compassion, assistance, and inclusivity. About the Author(s) @BradGeesaman is an Independent Security Consultant currently focused on helping teams secure their GKE clusters in harmony with their desired operational velocity.","title":"Introduction"},{"location":"#the-unofficial-google-kubernetes-engine-gke-security-guide","text":"","title":"The Unofficial Google Kubernetes Engine (GKE) Security Guide"},{"location":"#introduction","text":"Disclaimer This guide is not an official guide, is not endorsed by Google , and is comprised entirely from publicly available information. The information is provided \"as-is\", without warranty or fit for a particular purpose. You should fully understand the security implications of each recommendation before applying it in your environment. There are several books on the topic of getting Kubernetes Up and Running and even one specific to Kubernetes Security . If you are deploying in multiple platform environments like on-premise or across multiple cloud providers, those resources will be very useful. However, if you are deploying GKE clusters in GCP, you'll notice that there are a wide array of GCP and GKE-specific choices that need to be made. The goal of this guide is to help you prioritize and implement a security posture that meets your organization's needs while taking advantage of all the benefits of the GKE service. For each control and approach, the guide will attempt to help you understand the relative risks, relative likelihood, upfront cost and complexity, and ongoing cost and complexity of each security-related decision. Deep links to official GCP/GKE and Kubernetes documentation will be provided to guide further reading. Finally, links to hand-selected tools, books, and talk recordings will give additional support to the concepts for further exploration and understanding.","title":"Introduction"},{"location":"#audience","text":"This guide is focused specifically on the following roles working with a GKE deployment: Operations - Those responsible for deploying and maintaining the GCP Project, Networking, and GKE Cluster lifecycle. Security - Those responsible for ensuring the operational environment adequately meets the organization's security standards and posture. Security-minded developers - Those deploying operational workloads into the GKE cluster looking to follow security best practices. Team Leads - Those managing teams implementing GKE clusters and responsible for prioritizing security with operational velocity.","title":"Audience"},{"location":"#structure-of-this-guide","text":"As each layer of a system builds upon the layer underneath, this guide begins with the foundation of all GCP services and explains how the structure of folders and projects in a GCP organization can help organize and guide security settings and permissions management. Next, it covers the types of network configurations that support GKE clusters for different isolation strategies. The core of the guide gets into cluster configuration, lifecycle and operations, observability, and the management of custom additions in the form of addons. With a solid base in place, the guide covers the deployment and configuration of workloads and container images in terms of security best practices. Finally, it covers certain security-related workflows such as auditing for conformance and handling security issues when an incident occurs. Each topic area will cover: A few sentences to paragraphs on what the topic or setting is and does. Why the topic or setting is important and the risks associated with it. The versions it applies to, where applicable. When you might want to prioritize adoption or implementation. The upfront cost and complexity of deploying the change or approach. The longer term cost and complexity of maintaining the system with this change or approach implemented.","title":"Structure of this Guide"},{"location":"#gke-vs-building-kubernetes-yourself","text":"For first time Kubernetes operators, it's a fantastic idea to follow Kubernetes the Hard Way by Kelsey Hightower and build a cluster from scratch. It will give you a deep understanding of the components, their configuration settings, and an appreciation for the complexity of the system. The very next thing you should do is leverage an approach to Kubernetes that ensures you and your team do as little of that work as possible. In many cases, this is best done by working with a managed Kubernetes service like GKE . Successful Kubernetes cluster deployments require solid execution in wide range of areas, and it's impossible to be execellent in all of them at once. From a business standpoint, you want your teams working on the problems that matter to your organization and to leave the boring operational work to the cloud service provider. Kubernetes version upgrades, security patches, operating system maintenance, logging and monitoring infrastructure, and more are all things you want to be building \"on top of\" and not having to \"build\" yourself first. Refer to the benefits of GKE for further reading.","title":"GKE vs Building Kubernetes Yourself"},{"location":"#contributing","text":"This guide is a living document, and contributions in the form of issues and PRs are welcomed. If you are considering writing new content, please open an issue outlining what you'd like to write about, where it might fit in, and other details. If you found this guide useful, please consider donating your time attending and supporting your local cloud-native and Kubernetes-related meetups. The success or failure of Kubernetes and the CNCF ecosystem is largely dependent on you and how you help elevate others with your compassion, assistance, and inclusivity.","title":"Contributing"},{"location":"#about-the-authors","text":"@BradGeesaman is an Independent Security Consultant currently focused on helping teams secure their GKE clusters in harmony with their desired operational velocity.","title":"About the Author(s)"},{"location":"audit_and_compliance/","text":"Audit and Compliance CIS Benchmarking Inspec-GCP and Inspec-K8s Cloud Asset Inventory Forseti Security CSCC Common Misconfigurations","title":"Audit and Compliance"},{"location":"audit_and_compliance/#audit-and-compliance","text":"","title":"Audit and Compliance"},{"location":"audit_and_compliance/#cis-benchmarking","text":"","title":"CIS Benchmarking"},{"location":"audit_and_compliance/#inspec-gcp-and-inspec-k8s","text":"","title":"Inspec-GCP and Inspec-K8s"},{"location":"audit_and_compliance/#cloud-asset-inventory","text":"","title":"Cloud Asset Inventory"},{"location":"audit_and_compliance/#forseti-security","text":"","title":"Forseti Security"},{"location":"audit_and_compliance/#cscc","text":"","title":"CSCC"},{"location":"audit_and_compliance/#common-misconfigurations","text":"","title":"Common Misconfigurations"},{"location":"cloud_environment/","text":"Cloud Environment Identity and IAM Hierarchy At the foundation of your GCP Organization is a relationship with your trusted identity provider. Commonly, this is a Gsuite domain or a Cloud Identity installation. It's the basis of trust for how users and groups are managed throughout the GCP environments. It's where you audit logins/logouts, enforce MFA and session duration, and more. It's important to understand that in a GCP Organization, where a user is granted permissions is just as important as what permissions are granted. For example, granting a user or service account a binding to an IAM role for Storage Admin at the Project level allows that account to have all those permissions for all GCS buckets in that Project. Consider a somewhat realistic scenario: That Project has GCS buckets for storing audit logs, VPC flow logs, and firewall logs. The security team is given Storage Admin permissions to manage these. Also in that same Project, a development team wants to store some data used by their application. They too, get assigned Storage Admin permissions to that Project. There are a few problems: Unless the security team is the one that made the IAM permissions assignment, they might not be aware of the exposure of their security log and event data. This jeopardizes the integrity of the information if needed for incident response and guaranteeing chain of custody. The development team now has access to this sensitive security information. Even though they may never access it or need to, this violates the principle of least privilege. Any time a new GCS bucket is added to this Project, both teams will have access to it automatically. This can often be undesired behavior and tricky to untangle. Things get even more interesting when you consider a group of Projects organized into a GCP Folder. Permissions granted to a Folder \"trickle down\" to the Folders and Projects inside them. Because permissions are additive , a descendent Project can't block or override those permissions. Therefore, careful consideration must be given to access granted at each level, and special attention is needed for IAM roles bound to users/groups/service accounts at the Folder or Organization levels. Some examples to consider: If a user is assigned the primitive role Owner at the Organization level, they will be Owner in every single Project in the entire organization. The risk of compromise of those specific credentials (and by extension, that user's primary computing devices) is immediately increased to undesired levels. Granting Viewer at the Organization level allows reading all GCS buckets, all StackDriver logs, and viewing the configurations of most resources. In many cases, sensitive data is found in any or all of those places that can be used to escalate privileges. IAM \"Overcrowding\" The IAM page in the GCP Console tends to get \"crowded\" and harder to visually reason about when there are lots of individual bindings. Each IAM Role binding increases the cognitive load when reviewing permissions. Over time, this can get unwieldy and difficult to consolidate once systems and services are running in production. Best Practices Use a single Identity Provider - If all users and groups are originating from a single domain and are managed centrally, maintaining the proper IAM permissions throughout the GCP Organization is greatly simplified. Ensure all accounts use Multi-Factor Authentication (MFA) - Protecting the theft and misuse of GCP account credentials is the first and most important step to protecting your GCP infrastructure. If a set of credentials is stolen or a laptop lost, the window for those credentials to be valid is greatly reduced. Consolidate Users into Groups - Instead of granting individual users access, consider using a group, placing that user in that group, and granting access to the group. This way, if that person leaves the organization, it doesn't leave orphaned/unused accounts clogging up the IAM permissions listings that have to be manually removed using gcloud/UI. Also, when replacing that person who left, it's a simpler process of just adding the new person(s) to the same groups. No gcloud/UI changes are then necessary. Follow the Principle of Least Privilege - Take care when granting access Project-wide and even greater care when granting access at the Folder and Organization levels. There are often unintended consequences of over-granting permissions. Additionally, it's much harder to safely remove that binding as time goes on because inherited permissions might be required in a descendent project. Resources Creating and Managing GCP Organizations GSuite Security Cloud Identity Overview Cloud IAM Overview Organization, Folder, and Project Structure (TODO) Why it's so important early, dictates IAM permission granularity/simplicity, project is the IAM boundary for most permissions types. Why moving folders/projects isn't straightforward. Best Practices Early decisions have inertia Decide on Naming Conventions Early - Names of Projects Do not map to organization/team names Map to geographic folder Map to services/apps folders/projects Group by deployment env (sandbox/dev/stage/prod) Separate projects for GCR, GCS, SecOps (forseti) Resources Official GCP docs - Mapping IAM to folders/projects Examples of organization structures Cluster Networking VPC (shared vs peering based on administration model) Best Practices Do not overlap CIDRs Use VPC Aliasing Watch limits/quotas Resources Official GCP docs (shared vpc, vpc peering) VPC quotas/limits GKE VPC aliasing/subnetting","title":"Cloud Environment"},{"location":"cloud_environment/#cloud-environment","text":"","title":"Cloud Environment"},{"location":"cloud_environment/#identity-and-iam-hierarchy","text":"At the foundation of your GCP Organization is a relationship with your trusted identity provider. Commonly, this is a Gsuite domain or a Cloud Identity installation. It's the basis of trust for how users and groups are managed throughout the GCP environments. It's where you audit logins/logouts, enforce MFA and session duration, and more. It's important to understand that in a GCP Organization, where a user is granted permissions is just as important as what permissions are granted. For example, granting a user or service account a binding to an IAM role for Storage Admin at the Project level allows that account to have all those permissions for all GCS buckets in that Project. Consider a somewhat realistic scenario: That Project has GCS buckets for storing audit logs, VPC flow logs, and firewall logs. The security team is given Storage Admin permissions to manage these. Also in that same Project, a development team wants to store some data used by their application. They too, get assigned Storage Admin permissions to that Project. There are a few problems: Unless the security team is the one that made the IAM permissions assignment, they might not be aware of the exposure of their security log and event data. This jeopardizes the integrity of the information if needed for incident response and guaranteeing chain of custody. The development team now has access to this sensitive security information. Even though they may never access it or need to, this violates the principle of least privilege. Any time a new GCS bucket is added to this Project, both teams will have access to it automatically. This can often be undesired behavior and tricky to untangle. Things get even more interesting when you consider a group of Projects organized into a GCP Folder. Permissions granted to a Folder \"trickle down\" to the Folders and Projects inside them. Because permissions are additive , a descendent Project can't block or override those permissions. Therefore, careful consideration must be given to access granted at each level, and special attention is needed for IAM roles bound to users/groups/service accounts at the Folder or Organization levels. Some examples to consider: If a user is assigned the primitive role Owner at the Organization level, they will be Owner in every single Project in the entire organization. The risk of compromise of those specific credentials (and by extension, that user's primary computing devices) is immediately increased to undesired levels. Granting Viewer at the Organization level allows reading all GCS buckets, all StackDriver logs, and viewing the configurations of most resources. In many cases, sensitive data is found in any or all of those places that can be used to escalate privileges. IAM \"Overcrowding\" The IAM page in the GCP Console tends to get \"crowded\" and harder to visually reason about when there are lots of individual bindings. Each IAM Role binding increases the cognitive load when reviewing permissions. Over time, this can get unwieldy and difficult to consolidate once systems and services are running in production.","title":"Identity and IAM Hierarchy"},{"location":"cloud_environment/#best-practices","text":"Use a single Identity Provider - If all users and groups are originating from a single domain and are managed centrally, maintaining the proper IAM permissions throughout the GCP Organization is greatly simplified. Ensure all accounts use Multi-Factor Authentication (MFA) - Protecting the theft and misuse of GCP account credentials is the first and most important step to protecting your GCP infrastructure. If a set of credentials is stolen or a laptop lost, the window for those credentials to be valid is greatly reduced. Consolidate Users into Groups - Instead of granting individual users access, consider using a group, placing that user in that group, and granting access to the group. This way, if that person leaves the organization, it doesn't leave orphaned/unused accounts clogging up the IAM permissions listings that have to be manually removed using gcloud/UI. Also, when replacing that person who left, it's a simpler process of just adding the new person(s) to the same groups. No gcloud/UI changes are then necessary. Follow the Principle of Least Privilege - Take care when granting access Project-wide and even greater care when granting access at the Folder and Organization levels. There are often unintended consequences of over-granting permissions. Additionally, it's much harder to safely remove that binding as time goes on because inherited permissions might be required in a descendent project.","title":"Best Practices"},{"location":"cloud_environment/#resources","text":"Creating and Managing GCP Organizations GSuite Security Cloud Identity Overview Cloud IAM Overview","title":"Resources"},{"location":"cloud_environment/#organization-folder-and-project-structure-todo","text":"Why it's so important early, dictates IAM permission granularity/simplicity, project is the IAM boundary for most permissions types. Why moving folders/projects isn't straightforward.","title":"Organization, Folder, and Project Structure (TODO)"},{"location":"cloud_environment/#best-practices_1","text":"Early decisions have inertia Decide on Naming Conventions Early - Names of Projects Do not map to organization/team names Map to geographic folder Map to services/apps folders/projects Group by deployment env (sandbox/dev/stage/prod) Separate projects for GCR, GCS, SecOps (forseti)","title":"Best Practices"},{"location":"cloud_environment/#resources_1","text":"Official GCP docs - Mapping IAM to folders/projects Examples of organization structures","title":"Resources"},{"location":"cloud_environment/#cluster-networking","text":"VPC (shared vs peering based on administration model)","title":"Cluster Networking"},{"location":"cloud_environment/#best-practices_2","text":"Do not overlap CIDRs Use VPC Aliasing Watch limits/quotas","title":"Best Practices"},{"location":"cloud_environment/#resources_2","text":"Official GCP docs (shared vpc, vpc peering) VPC quotas/limits GKE VPC aliasing/subnetting","title":"Resources"},{"location":"cluster_addons/","text":"Cluster Add-ons Cloud Run on GKE Anthos Configuration Management Istio GPUs","title":"Cluster Add-ons"},{"location":"cluster_addons/#cluster-add-ons","text":"","title":"Cluster Add-ons"},{"location":"cluster_addons/#cloud-run-on-gke","text":"","title":"Cloud Run on GKE"},{"location":"cluster_addons/#anthos-configuration-management","text":"","title":"Anthos Configuration Management"},{"location":"cluster_addons/#istio","text":"","title":"Istio"},{"location":"cluster_addons/#gpus","text":"","title":"GPUs"},{"location":"cluster_configuration/","text":"Cluster Configuration Geographical Placement and Cluster Types (TODO) asdf Best Practices asdf asdf Resources Official GKE Docs asdf IAM and RBAC asdf Best Practices asdf asdf Resources Official GKE Docs asdf Cluster Access asdf Best Practices asdf asdf Resources Official GKE Docs asdf Cluster Settings asdf Best Practices asdf asdf Resources Official GKE Docs asdf Node Pool Settings asdf Best Practices asdf asdf Resources Official GKE Docs asdf","title":"Cluster Configuration"},{"location":"cluster_configuration/#cluster-configuration","text":"","title":"Cluster Configuration"},{"location":"cluster_configuration/#geographical-placement-and-cluster-types-todo","text":"asdf","title":"Geographical Placement and Cluster Types (TODO)"},{"location":"cluster_configuration/#best-practices","text":"asdf asdf","title":"Best Practices"},{"location":"cluster_configuration/#resources","text":"Official GKE Docs asdf","title":"Resources"},{"location":"cluster_configuration/#iam-and-rbac","text":"asdf","title":"IAM and RBAC"},{"location":"cluster_configuration/#best-practices_1","text":"asdf asdf","title":"Best Practices"},{"location":"cluster_configuration/#resources_1","text":"Official GKE Docs asdf","title":"Resources"},{"location":"cluster_configuration/#cluster-access","text":"asdf","title":"Cluster Access"},{"location":"cluster_configuration/#best-practices_2","text":"asdf asdf","title":"Best Practices"},{"location":"cluster_configuration/#resources_2","text":"Official GKE Docs asdf","title":"Resources"},{"location":"cluster_configuration/#cluster-settings","text":"asdf","title":"Cluster Settings"},{"location":"cluster_configuration/#best-practices_3","text":"asdf asdf","title":"Best Practices"},{"location":"cluster_configuration/#resources_3","text":"Official GKE Docs asdf","title":"Resources"},{"location":"cluster_configuration/#node-pool-settings","text":"asdf","title":"Node Pool Settings"},{"location":"cluster_configuration/#best-practices_4","text":"asdf asdf","title":"Best Practices"},{"location":"cluster_configuration/#resources_4","text":"Official GKE Docs asdf","title":"Resources"},{"location":"cluster_lifecycle/","text":"Cluster Lifecycle Infrastructure as Code Upgrades Scaling Security Bulletins and Patching Maintenance Windows","title":"Cluster Lifecycle"},{"location":"cluster_lifecycle/#cluster-lifecycle","text":"","title":"Cluster Lifecycle"},{"location":"cluster_lifecycle/#infrastructure-as-code","text":"","title":"Infrastructure as Code"},{"location":"cluster_lifecycle/#upgrades","text":"","title":"Upgrades"},{"location":"cluster_lifecycle/#scaling","text":"","title":"Scaling"},{"location":"cluster_lifecycle/#security-bulletins-and-patching","text":"","title":"Security Bulletins and Patching"},{"location":"cluster_lifecycle/#maintenance-windows","text":"","title":"Maintenance Windows"},{"location":"cluster_observability/","text":"Cluster Observability Audit Logs Control Plane Logs Worker Node Logs Pod Logs Node Metrics Kubernetes State Metrics Workload Metrics","title":"Cluster Observability"},{"location":"cluster_observability/#cluster-observability","text":"","title":"Cluster Observability"},{"location":"cluster_observability/#audit-logs","text":"","title":"Audit Logs"},{"location":"cluster_observability/#control-plane-logs","text":"","title":"Control Plane Logs"},{"location":"cluster_observability/#worker-node-logs","text":"","title":"Worker Node Logs"},{"location":"cluster_observability/#pod-logs","text":"","title":"Pod Logs"},{"location":"cluster_observability/#node-metrics","text":"","title":"Node Metrics"},{"location":"cluster_observability/#kubernetes-state-metrics","text":"","title":"Kubernetes State Metrics"},{"location":"cluster_observability/#workload-metrics","text":"","title":"Workload Metrics"},{"location":"container_images/","text":"Container Images Dockerfile Best Practices Base Images Package Vulnerabilities Application Vulnerabilities","title":"Container Images"},{"location":"container_images/#container-images","text":"","title":"Container Images"},{"location":"container_images/#dockerfile-best-practices","text":"","title":"Dockerfile Best Practices"},{"location":"container_images/#base-images","text":"","title":"Base Images"},{"location":"container_images/#package-vulnerabilities","text":"","title":"Package Vulnerabilities"},{"location":"container_images/#application-vulnerabilities","text":"","title":"Application Vulnerabilities"},{"location":"detection_and_response/","text":"Detection and Response Runtime Detection Incident Response Forensics Credential Revocation and Rotation","title":"Detection and Response"},{"location":"detection_and_response/#detection-and-response","text":"","title":"Detection and Response"},{"location":"detection_and_response/#runtime-detection","text":"","title":"Runtime Detection"},{"location":"detection_and_response/#incident-response","text":"","title":"Incident Response"},{"location":"detection_and_response/#forensics","text":"","title":"Forensics"},{"location":"detection_and_response/#credential-revocation-and-rotation","text":"","title":"Credential Revocation and Rotation"},{"location":"oldindex/","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. Troubleshooting Installation on macOS When you're running the pre-installed version of Python on macOS, pip tries to install packages in a folder for which your user might not have the adequate permissions. There are two possible solutions for this: Installing in user space (recommended): Provide the --user flag to the install command and pip will install the package in a user-site location. This is the recommended way. Switching to a homebrewed Python : Upgrade your Python installation to a self-contained solution by installing Python with Homebrew. This should eliminate a lot of problems you may be having with pip . Error: unrecognized theme 'material' If you run into this error, the most common reason is that you installed MkDocs through some package manager (e.g. Homebrew or apt-get ) and the Material theme through pip , so both packages end up in different locations. MkDocs only checks its install location for themes.","title":"Welcome to MkDocs"},{"location":"oldindex/#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"oldindex/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message.","title":"Commands"},{"location":"oldindex/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"oldindex/#troubleshooting","text":"Installation on macOS When you're running the pre-installed version of Python on macOS, pip tries to install packages in a folder for which your user might not have the adequate permissions. There are two possible solutions for this: Installing in user space (recommended): Provide the --user flag to the install command and pip will install the package in a user-site location. This is the recommended way. Switching to a homebrewed Python : Upgrade your Python installation to a self-contained solution by installing Python with Homebrew. This should eliminate a lot of problems you may be having with pip . Error: unrecognized theme 'material' If you run into this error, the most common reason is that you installed MkDocs through some package manager (e.g. Homebrew or apt-get ) and the Material theme through pip , so both packages end up in different locations. MkDocs only checks its install location for themes.","title":"Troubleshooting"},{"location":"project_organization/","text":"Project Organization Project Quotas (TODO) CPU/RAM/GPU/Disk, Subnets, Instances per mig Best Practices 110% (more than double) current usage Subnets/VPC Resources Official GCP Docs - Quotas and limits Project and Environment Separation Three types of deployment models, pros and cons, easy of switching between them, clusters per project Best Practices 1 cluster per project 1 cluster per colocated set of services with similar data gravity and redundancy needs Resources Official GKE Docs? asdf Separating Tenants Define hard and soft tenancy. Per cluster or per namespace Best Practices Hard tenancy - separate projects/clusters Soft tenancy - shared projects/clusters Resources ?","title":"Project Organization"},{"location":"project_organization/#project-organization","text":"","title":"Project Organization"},{"location":"project_organization/#project-quotas-todo","text":"CPU/RAM/GPU/Disk, Subnets, Instances per mig","title":"Project Quotas (TODO)"},{"location":"project_organization/#best-practices","text":"110% (more than double) current usage Subnets/VPC","title":"Best Practices"},{"location":"project_organization/#resources","text":"Official GCP Docs - Quotas and limits","title":"Resources"},{"location":"project_organization/#project-and-environment-separation","text":"Three types of deployment models, pros and cons, easy of switching between them, clusters per project","title":"Project and Environment Separation"},{"location":"project_organization/#best-practices_1","text":"1 cluster per project 1 cluster per colocated set of services with similar data gravity and redundancy needs","title":"Best Practices"},{"location":"project_organization/#resources_1","text":"Official GKE Docs? asdf","title":"Resources"},{"location":"project_organization/#separating-tenants","text":"Define hard and soft tenancy. Per cluster or per namespace","title":"Separating Tenants"},{"location":"project_organization/#best-practices_2","text":"Hard tenancy - separate projects/clusters Soft tenancy - shared projects/clusters","title":"Best Practices"},{"location":"project_organization/#resources_2","text":"?","title":"Resources"},{"location":"workload_configuration/","text":"Workload Configuration Trusted Image Repos Deployment Settings and Best Practices Pod Security Policy Network Policy RBAC Dynamic Admission Control Secrets Management Pod Disruption Budgets LimitRanges Resource Control","title":"Workload Configuration"},{"location":"workload_configuration/#workload-configuration","text":"","title":"Workload Configuration"},{"location":"workload_configuration/#trusted-image-repos","text":"","title":"Trusted Image Repos"},{"location":"workload_configuration/#deployment-settings-and-best-practices","text":"","title":"Deployment Settings and Best Practices"},{"location":"workload_configuration/#pod-security-policy","text":"","title":"Pod Security Policy"},{"location":"workload_configuration/#network-policy","text":"","title":"Network Policy"},{"location":"workload_configuration/#rbac","text":"","title":"RBAC"},{"location":"workload_configuration/#dynamic-admission-control","text":"","title":"Dynamic Admission Control"},{"location":"workload_configuration/#secrets-management","text":"","title":"Secrets Management"},{"location":"workload_configuration/#pod-disruption-budgets","text":"","title":"Pod Disruption Budgets"},{"location":"workload_configuration/#limitranges","text":"","title":"LimitRanges"},{"location":"workload_configuration/#resource-control","text":"","title":"Resource Control"}]}